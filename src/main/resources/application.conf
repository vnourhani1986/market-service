akka {
  loglevel = INFO
  stdout-loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logger-startup-timeout = 30s
  default-dispatcher {
    fork-join-executor {
      parallelism-min = 8
    }
  }
  test {
    timefactor = 1
  }
  http {
    server {
      server-header = "snapptrip.com REST API"
      request-timeout = 120s
    }
  }
}


db {
  url = "jdbc:postgresql://82.99.215.219:65432/webeng"
  user = "b2c"
  password = "E9WAk?C#>GE<9Ge=w"
  poolName = "beta"
  numThreads = 10
  connectionTimeout = 10s
  validationTimeout = 10s
  properties {
    sslfactory = org.postgresql.ssl.NonValidatingFactory
  }
}

slick-postgres {

  profile = "slick.jdbc.PostgresProfile$"

  db {
    dataSourceClass = "slick.jdbc.DriverDataSource"
    properties = {
      driver = "org.postgresql.Driver"
      url = "jdbc:postgresql://82.99.215.219:65432/webeng?ApplicationName=Market&sslfactory=org.postgresql.ssl.NonValidatingFactory"
      user = "b2c"
      password = "E9WAk?C#>GE<9Ge=w"
    }

  }
}

http {
  host = "0.0.0.0"
  port = 9000
}

https {
  host = "0.0.0.0"
  port = 9000
}

snapptrip-auth {
  api-base-url = "b2c.ptp"
  login-url = "/service2/auth/v1/auth"
  auth-url = "/service2/auth/v1/auth"
  port = 80
}

web-engage {
  host = "api.webengage.com"
  api-base-url = "/v1/accounts/"
  event-url = "/events";
  user-url = "/users"
  opengdpr-requests-url = "/opengdpr_requests"
  license-code = "11b5650c0"
  api-key = "Bearer 9f86b2a7-1497-4adc-856b-df4211abb0cc"
  token = "c2747d3b-e92c-4015-be00-29bb9e477f4b"
  time-offset = "+0430"
}

akka.kafka {
  producer {
    kafka-clients {
      bootstrap.servers = "82.99.215.219:49092"
    }
  }
  consumer {
    kafka-clients {
      enable.auto.commit = true
      bootstrap.servers = "82.99.215.219:49092"
      group.id = "test-group1"
      auto.offset.reset = "earliest"
    }
  }
}


notification {
  host = "notification.core.svc:9000"
  api-base-url = ""
  sms-url = "/v2/notifications"
  email-url = "/v2/emails"
  client = "ptp-b2c"
}
sentry {
  dns: "http://05fd30058bef4c148c747afdba90c832@sentry.snapptrip.com/25"
  environment: "localhost"
}

// This is used when calculating datetimes, durations, intervals, and FlightModule.now().
timezone = "Asia/Tehran"

redis {
  ip: "192.168.88.102"
  db: 5
  connectionTimeout: 30s
}