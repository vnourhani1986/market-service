stages:
  - build
  - deploy
  - test

.build_script:
  script: &build_script
    - sbt universal:packageZipTarball
    - docker login -u $REG_USER -p $REG_PASSWORD $REG_SERVER
    - docker build -t $IMAGE_TAG:$CI_COMMIT_SHA .
    - docker push $IMAGE_TAG:$CI_COMMIT_SHA
    - docker tag $IMAGE_TAG:$CI_COMMIT_SHA $IMAGE_TAG
    - docker push $IMAGE_TAG

.deploy_script:
  script: &deploy_script
    - >
        helm template
        --kube-context $CONTEXT
        --namespace $CI_PROJECT_NAMESPACE
        --set replicas=$REPLICAS
        --set baseConfig=$CI_COMMIT_REF_NAME
        --set imagePullSecrets=$imagePullSecrets
        --set image=localhost/$CI_PROJECT_PATH/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
        --set ingressClass="$CI_PROJECT_NAMESPACE-$CONTEXT"
        deploy
    - >
        helm upgrade
        --kube-context $CONTEXT
        --namespace $CI_PROJECT_NAMESPACE
        --set replicas=$REPLICAS
        --set baseConfig=$CI_COMMIT_REF_NAME
        --set imagePullSecrets=$imagePullSecrets
        --set image=localhost/$CI_PROJECT_PATH/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
        --set ingressClass="$CI_PROJECT_NAMESPACE-$CONTEXT"
        --recreate-pods
        --force
        --install
        $CI_COMMIT_REF_NAME-$CI_PROJECT_NAME
        deploy

build_beta:
    stage: build
    retry: 2
    script: *build_script
    variables:
        IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME
        REG_USER: gitlab-ci-token
        REG_PASSWORD: $CI_JOB_TOKEN
        REG_SERVER: $CI_REGISTRY
    only:
       - beta
       - /review-.+$/


build_master:
    stage: build
    retry: 2
    script: *build_script
    variables:
        IMAGE_TAG: $REGISTRY_SERVER/$CI_PROJECT_PATH/$CI_COMMIT_REF_NAME
        REG_USER: $REGISTRY_USER
        REG_PASSWORD: $REGISTRY_PASSWORD
        REG_SERVER: $REGISTRY_SERVER
    only:
       - master




deploy_beta:
    stage: deploy
    retry: 2
    script: *deploy_script
    variables:
        imagePullSecrets: regsecret
        CONTEXT: local
        REPLICAS: 1
    environment:
        name: beta
        url: http://localhost:9000
    only:
        - beta
deploy_master_pars:
    stage: deploy
    retry: 2
    script: *deploy_script
    variables:
        imagePullSecrets: production-registry
        CONTEXT: pars
        REPLICAS: 2
    environment:
        name: production_ir
        url: http://localhost:9000
    only:
        - master

    when: manual

deploy_master_shatel:
    stage: deploy
    retry: 2
    script: *deploy_script
    variables:
        imagePullSecrets: production-registry
        CONTEXT: shatel
        REPLICAS: 2
    environment:
        name: production_shatel
        url: http://localhost:9000
    only:
        - master

deploy_staging:
    stage: deploy
    retry: 2
    variables:

        IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
        BASE_CONFIG: beta
        REPLICAS: 1
    script:
        - helm template \
            --namespace $CI_PROJECT_NAMESPACE \
            --set replicas=$REPLICAS \
            --set baseConfig=$BASE_CONFIG \
            --set imagePullSecrets=$imagePullSecrets
            --set image=$IMAGE_TAG \
            --set ingressClass="$CI_PROJECT_NAMESPACE-$CONTEXT" \
            deploy
        - helm upgrade \
            --namespace $CI_PROJECT_NAMESPACE \
            --set replicas=$REPLICAS \
            --set baseConfig=$BASE_CONFIG \
            --set pullSecrets=$imagePullSecrets
            --set image=$IMAGE_TAG \
            --set ingressClass="$CI_PROJECT_NAMESPACE-$CONTEXT" \
            --recreate-pods \
            --wait \
            -i `echo ${CI_COMMIT_REF_NAME} | cut -d'-' -f2` \

            deploy
    only:
       - /review-.+$/

test_stage:
  stage: test
  script:
    - sbt clean coverage test coverageReport
    - sbt -Dsonar.projectName=$CI_PRIJECT_NAME -Dsonar.branch.name=$CI_COMMIT_REF_NAME sonarScan